#include <stdio.h>
#include "sudoku_io.h"
#include <math.h>

int cellAccepted(struct Sudoku sud, int row, int col, int temp){

  int smallLength = sqrt(sud.length);
  int startingRow = (row/smallLength) * smallLength;
  int startingCol = (col/smallLength) * smallLength;

  //printf("Number checking should be 0 %d\n", sud.sudoku[row][col]);

  for(int i = 0; i < sud.length; i++){

      if(sud.sudoku[i][col] == temp){
        //printf("%s\n", "It goes here 1st");
        return 0;
      }
      if(sud.sudoku[row][i] == temp){
        //printf("%s\n", "It goes here 2nd");
        return 0;
      }
      //printf("Values %d\n", sud.sudoku[startingRow + (i % smallLength)][startingCol + (i/smallLength)]);
      if(sud.sudoku[startingRow + (i % smallLength)][startingCol + (i/smallLength)] == temp){
        return 0;
      }
  }
  return 1;
}


int sudokuSolver(struct Sudoku sud, int row, int col){

      if(sud.sudoku[row][col] != 0){
        if(col + 1 < sud.length){
          if(sudokuSolver(sud, row, col+1)){
            return 1;
          }
          else{
            return 0;
          }
        }
        else{
          if(row+1 < sud.length){
            if(sudokuSolver(sud, row + 1, 0)){
              return 1;
            }
            else{
              return 0;
            }
          }
            else{
              printf("%s\n", "stops 1");
              for(int i = 0; i < sud.length; i++){
                for(int j = 0; j < sud.length; j++){
                  printf("%d ", sud.sudoku[i][j]);
                }
                printf("\n");
              }
              return 1;
            }
          }
        }


    else{
      for(int i = 0; i < sud.length; i++){
        int valueToPass = i + 1;
        if(cellAccepted(sud, row, col, valueToPass)){
          sud.sudoku[row][col] = valueToPass;
          if(col + 1<sud.length){
            if(sudokuSolver(sud, row, col+1)){
              return 1;
            }
            else{
              sud.sudoku[row][col] = 0;
            }
          }
          else if(row+1<sud.length){
            if(sudokuSolver(sud, row + 1, 0)){
              return 1;
            }
            else{
              sud.sudoku[row][col] = 0;
            }
          }
          else{
            printf("%s\n", "stops 2");
            for(int m = 0; m < sud.length; m++){
              for(int n = 0; n < sud.length; n++){
                printf("%d ", sud.sudoku[m][n]);
              }
              printf("\n");
            }
            return 1;
          }
        }
      }
    }
    return 0;
}





int main (int argc, char *argv[]){
  //int ans = cellAccepted(parseSudoku(argv[1]), 7, 4, 25);
  //printSudoku(parseSudoku(argv[1]));
  //printf("%d\n", ans);

  int sudokuSolve = sudokuSolver(parseSudoku(argv[1]), 0, 0);

}
